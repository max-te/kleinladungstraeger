name: Build and Publish

on:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  build_release:
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Prepare app layer
        run: |
          mkdir -p ./target/docker/bin
          cp ./target/release/klt ./target/docker/bin/klt
      - name: Publish distroless image
        id: push-distroless
        run: |
          ./target/release/klt --digest-file ./distroless.digest recipe.toml
          echo "digest=$(cat ./distroless.digest)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish clearlinux image
        id: push-clear
        run: |
          ./target/release/klt --digest-file ./clear.digest recipe-clear.toml
          echo "digest=$(cat ./clear.digest)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Login for attestation
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Generate artifact attestation (distroless)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/max-te/kleinladungstraeger
          subject-digest: ${{ steps.push-distroless.outputs.digest }}
          push-to-registry: true
      - name: Generate artifact attestation (clearlinux)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/max-te/kleinladungstraeger
          subject-digest: ${{ steps.push-clear.outputs.digest }}
          push-to-registry: true
