name: Build and Publish

on:
  push:
    branches: ["main"]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  build_release:
    permissions:
      packages: write
      contents: write
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: actions/checkout@v4

      - name: Parse release tag and set version
        if: github.ref_type == 'tag'
        run: |
          TAG_NAME=$(echo "$GITHUB_REF" | sed 's|refs/tags/v||')
          echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
          sed -i "/\[package\]/,/\[/{s/version = \"[^\"]*\"/version = \"$TAG_NAME\"/}" Cargo.toml

      - name: Build
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Build and publish images
        id: images
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::group::Prepare file structure"
          mkdir -p ./target/docker/usr/bin
          cp ./target/release/klt ./target/docker/usr/bin/klt
          echo "::endgroup::"

          echo "::group::Build distroless image"
          ./target/release/klt --digest-file ./distroless.digest recipe.toml
          echo "distroless=$(cat ./distroless.digest)" >> $GITHUB_OUTPUT
          echo "::endgroup::"

          echo "::group::Build debian image"
          ./target/release/klt --digest-file ./debian.digest recipe-debian.toml
          echo "debian=$(cat ./debian.digest)" >> $GITHUB_OUTPUT
          echo "::endgroup::"

          echo "distroless digest: $(cat ./distroless.digest)" >> $GITHUB_STEP_SUMMARY
          echo "debian digest: $(cat ./debian.digest)" >> $GITHUB_STEP_SUMMARY

      - name: Docker Login for attestation
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Generate artifact attestation (distroless)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/max-te/kleinladungstraeger
          subject-digest: "${{ steps.images.outputs.distroless }}"
          # push-to-registry: true
      - name: Generate artifact attestation (debian image)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/max-te/kleinladungstraeger
          subject-digest: "${{ steps.images.outputs.debian }}"
          # push-to-registry: true

      - name: Commit and push updated Cargo.toml
        if: github.ref_type == 'tag'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b main
          git fetch origin main
          git branch -u origin/main
          git add Cargo.toml Cargo.lock
          git commit -m "chore: bump version to $RELEASE_TAG [skip ci]" --author="$GITHUB_ACTOR <$GITHUB_ACTOR@users.noreply.github.com>"
          git push origin main
